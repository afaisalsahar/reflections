1) What happens when you initialize a repository? Why do you need to do it?
When you initialize a repository the files are then to be tracked and commited, you need one becuase git adds a ".git" directory that makes everythingwork for you.

2) How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area is where files are ready to be commited, working direcotry where changes are being made and the repository is where our commits reside. The value it offers is the ability to only stage the files that we want to be commited and not the entire directory at one.

3) How can you use the stagging area to make sure you have one commit per logical change?
Before making a commit the changes must be stagged first so when changes are brought into a file then it must be stagged and then commited.

4) What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When starting to work on an experimental feature something that's not a big fix or feature improvement, something really odd or completly different a branch can be really helpful to track and organize everything.

5) How do the diagrams help you visualize the branch structure?
Diagrams can be really helpful especially when the a repistory has many branches and each with multiple commits, it made sense through diagrams how branches work and how reachability actually works and the detached head state also started to make sense.
